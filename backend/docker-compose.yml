services:

  db:
    container_name: pvh_postgres_db
    restart: always
    image: postgres:17
    env_file:
      - .env.local
#    Чтобы к бд нельзя было подключиться извне
#    expose:
#      - "5432"
#    Testing purposes(to open db in console)
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - app-network

  migrate:
    image: migrate/migrate
    volumes:
      - ./cmd/migrator/migrations:/migrations
    env_file:
      - ./.env.local
    command:
      #      u have to change it, if you're exposing the port
      [ "-source", "file://migrations", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable", "up" ]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  migrate-windows:
    build:
      context: .
      dockerfile: ./docker/Dockerfile_window_migrator
    env_file: .env.local
    command:
      [ "./windowmigrator", "--db-user-name", "${POSTGRES_USER}", "--db-pass", "${POSTGRES_PASSWORD}", "--db-host", "db", "--db-name", "${POSTGRES_DB}" ]
    depends_on:
      migrate:
        condition: service_completed_successfully
    networks:
      - app-network

  server:
    container_name: pvh_server
    restart: always
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    expose:
      - "8080"
    volumes:
      - ./static/images:/app/static/images
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    container_name: pvh_frontend
    restart: always
    build:
      context: ../frontend/pvhfront
      dockerfile: Dockerfile
    expose:
      - "3000"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: pvh_nginx
    restart: always
    volumes:
      - ./static/images:/static/images
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - server
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  static:



